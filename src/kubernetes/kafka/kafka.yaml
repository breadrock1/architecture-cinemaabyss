apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: cinemaabyss
  labels:
    app: kafka
spec:
  ports:
    - port: 9092
      name: kafka
  selector:
    app: kafka
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-data
  namespace: cinemaabyss
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: cinemaabyss
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka:2.13-2.7.0
          ports:
            - containerPort: 9092
              name: kafka
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka:9092
            - name: KAFKA_LISTENERS
              value: PLAINTEXT://0.0.0.0:9092
            - name: KAFKA_PORT
              value: "9092"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_CREATE_TOPICS
              value: "movie-events:1:1,user-events:1:1,payment-events:1:1"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_LOG_DIRS
              value: "/kafka/kafka-logs"
          volumeMounts:
            - name: kafka-data
              mountPath: /kafka
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 60
            periodSeconds: 20
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-data
